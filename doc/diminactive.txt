*Diminactive* - dim inactive windows for Vim and Neovim

        ███╗   ██╗███████╗ ██████╗ ███╗   ███╗ █████╗ ██╗  ██╗███████╗
        ████╗  ██║██╔════╝██╔═══██╗████╗ ████║██╔══██╗██║ ██╔╝██╔════╝
        ██╔██╗ ██║█████╗  ██║   ██║██╔████╔██║███████║█████╔╝ █████╗
        ██║╚██╗██║██╔══╝  ██║   ██║██║╚██╔╝██║██╔══██║██╔═██╗ ██╔══╝
        ██║ ╚████║███████╗╚██████╔╝██║ ╚═╝ ██║██║  ██║██║  ██╗███████╗
        ╚═╝  ╚═══╝╚══════╝ ╚═════╝ ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝


==============================================================================
CONTENTS                                                *diminactive-contents*

    1. Introduction ............................... |diminactive-introduction|
    2. Commands ....................................... |diminactive-commands|
    3. Configuration ............................. |diminactive-configuration|
    4. Functions ..................................... |diminactive-functions|
    6. Frequently Asked Questions (FAQ) ................ |diminactive-faq|

==============================================================================
1. Introduction                                     *diminactive-introduction*


This plugins dims inactive windows so that you can immediately spot

The dimming can be achieved via different methods:
- register every column in |'colorcolumn'|, effectively resulting in a different
background color (see |hl-CursorColumn|) and |g:diminactive_use_colorcolumn|
- the syntax method


This is enabled by default and can be disabled, e.g. if you want to use the
syntax method only:

g:diminactive_use_colorcolumn = 0				*g:diminactive_use_colorcolumn*



There is an option to disable syntax highlighting for inactive windows. It is
disabled by default, and you can enable it using:

    let g:diminactive_use_syntax = 1

### `FocusLost` and `FocusGained` events

g:diminactive_enable_focus = 1                     *g:diminactive_enable_focus*
Enable (un)dimming windows on Vim's `FocusLost` and `FocusGained`
events.



## Commands

The following commands are provided to control it:

### Global control
 - DimInactive / DimInactiveOn
 - DimInactiveOff
 - DimInactiveToggle

 - DimInactiveSyntaxOn
 - DimInactiveSyntaxOff

 - DimInactiveColorcolumnOn
 - DimInactiveColorcolumnOff

### Control on the window level
Dimming can be controlled on the window level, which overrides any buffer-local
configuration (a buffer can be displayed in multiple windows).

#### `DimInactiveWindowOff`
Disable for this window.

#### `DimInactiveWindowOn`
Enable for this window.

#### `DimInactiveWindowReset`
Reset config on window level.

### Control on the buffer level
Dimming can be controlled on the buffer level.
This gets overridden by window-local configuration (a buffer can be displayed
in multiple windows).

#### `DimInactiveBufferOff`
Disable for this buffer.

#### `DimInactiveBufferOn`
Enable for this buffer.

#### `DimInactiveBufferReset`
Reset config on buffer level.

## Filtering buffers

You can disable the dimming based on `buftype` or `filetype` with the
following settings.

### `g:diminactive_buftype_blacklist`

A list of buffer types where dimming gets disabled. Default:

    let g:diminactive_buftype_blacklist = ['nofile', 'nowrite', 'acwrite', 'quickfix', 'help']

### `g:diminactive_filetype_blacklist`

A list of filetypes where dimming gets disabled. Default:

    let g:diminactive_filetype_blacklist = ['startify']

### `g:diminactive_buftype_whitelist`

A list of buffer types where dimming gets enabled (overrides the blacklist).
Default:

    let g:diminactive_buftype_whitelist = []

### `g:diminactive_filetype_whitelist`

A list of filetypes where dimming gets enabled (overrides the whitelist).
Default:

>
    let g:diminactive_filetype_whitelist = ['dirvish']

											*diminactive-faq*

How to enable focus events through tmux ?
It is recommended to install the
[vim-tmux-focus-events][3] plugin for Vim and add `set -g focus-events on`
to your `~/.tmux.conf` to enable better support for Vim's `FocusLost` and
`FocusGained` events in tmux.
